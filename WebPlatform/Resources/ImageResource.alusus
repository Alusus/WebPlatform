@merge module WebPlatform {
    //==========================================================================
    // ImageResource
    // An image resource that can be used with canvas image operations.
    class ImageResource {
        def id: ArchInt = 0;
        def url: String;

        handler this~terminate() {
            if this.id != 0 releaseResource(this.id);
        }

        handler this.load(u: ptr[array[Char]]): SrdRef[Promise[Int]] {
            def p: SrdRef[Promise[Int]] = Promise[Int].new();
            this.url = u;
            loadImage(u, closure (json: Json) {
                def data: Json = json.getObject("eventData");
                if this.id != 0 {
                    releaseResource(this.id);
                    this.id = 0;
                }
                if data.getBool("success") {
                    this.id = data.getInt("resourceId");
                    p.resolve(0);
                } else p.reject(castSrdRef[SrdRef[GenericError]().{
                    construct();
                    code = 1;
                    message = String("Loading failed");
                }, Error]);
            });
            return p;
        }

        handler this.initFromCanvas(canvas: ref[CanvasResource]) {
            if this.id != 0 releaseResource(this.id);
            this.id = createImageResourceFromCanvasResource(canvas.id);
        }

        handler this.getDimensions(): Dimensions {
            def dim: Dimensions;
            if this.id != 0 getImageDimensions(this.id, dim);
            return dim;
        }
    }
}

