@merge module WebPlatform {
    //==========================================================================
    // AudioResource
    class AudioResource {
        def id: ArchInt = 0;
        def url: String;

        handler this~terminate() {
            if this.id != 0 releaseResource(this.id);
        }

        handler this.load(u: ptr[array[Char]]): SrdRef[Promise[Int]] {
            def p: SrdRef[Promise[Int]] = Promise[Int].new();
            this.url = u;
            loadAudio(u, closure (json: Json) {
                def data: Json = json.getObject("eventData");
                if this.id != 0 {
                    releaseResource(this.id);
                    this.id = 0;
                }
                if data.getBool("success") {
                    this.id = data.getInt("resourceId");
                    p.resolve(0);
                } else p.reject(GenericError.new(Errors.AUDIO_LOAD, "Loading failed"));
            });
            return p;
        }

        handler this.play(loop: Bool) {
            this.play(loop, false);
        }

        handler this.play(loop: Bool, stopPrevious: Bool) {
            playAudio(this.id, loop, stopPrevious);
        }

        handler this.stop() {
            stopAudio(this.id);
        }

        handler this.pause() {
            pauseAudio(this.id);
        }

        handler this.resume() {
            resumeAudio(this.id);
        }

        handler this.volume = Float {
            setAudioVolume(this.id, value);
            return value;
        }
        handler this.volume:Float {
            return getAudioVolume(this.id);
        }

        handler this.isPlaying(): Bool {
            return isAudioPlaying(this.id);
        }
    }
}

