@merge module WebPlatform {
    // Element Management
    @expname[createElement] function createElement (type: ptr[Char], name: ptr[Char], parent: ptr[Char]);
    @expname[deleteElement] function deleteElement (name: ptr[Char]);
    @expname[setElementAttribute] function setElementAttribute (name: ptr[Char], prop: ptr[Char], value: ptr[Char]);
    @expname[getElementAttribute] function getElementAttribute (name: ptr[Char], prop: ptr[Char]): ptr[array[Char]];
    // Event Loop
    @expname[fetchNextEvent] function fetchNextEvent (): ptr[array[Char]];
    @expname[registerElementEventHandler] function _registerElementEventHandler (
      elementName: ptr[Char], eventName: ptr[Char], cbId: ArchInt
    );
    @expname[unregisterElementEventHandler] function _unregisterElementEventHandler (
        elementName: ptr[Char], eventName: ptr[Char]
    );
    @expname[waitForEvent] function waitForEvent;
    // TODO: usleep
    // Async Operations
    @expname[sendRequest] function _sendRequest (
        method: ptr[Char], uri: ptr[Char], headers: ptr[Char], body: ptr[Char], timeoutInMs: Int, cbId: ArchInt
    );
    @expname[startTimer] function _startTimer (duration: Word, cbId: ArchInt): Word;
    @expname[stopTimer] function _stopTimer (id: Word);
    @expname[setTimeout] function _setTimeout (duration: Word, cbId: ArchInt): Word;
    @expname[cancelTimeout] function _cancelTimeout (id: Word);
    // Resource Management
    @expname[loadImage] function _loadImage (url: ptr[Char], cbId: ArchInt): ArchInt;
    @expname[createCanvasResource] function createCanvasResource (width: Int, height: Int): ArchInt;
    @expname[createImageResourceFromCanvasResource] function createImageResourceFromCanvasResource (
        canvasId: ArchInt
    ): ArchInt;
    @expname[registerElementAsResource] function registerElementAsResource (id: ptr[Char]): ArchInt;
    @expname[loadAudio] function _loadAudio (url: ptr[Char], cbId: ArchInt): ArchInt;
    @expname[releaseResource] function releaseResource (resourceId: ArchInt);
    @expname[loadFont] function _loadFont (fontName: ptr[Char], url: ptr[Char], cbId: ArchInt);
    // Canvas Operations
    @expname[drawLine] function drawLine (canvasId: ArchInt, x1: Int, y1: Int, x2: Int, y2: Int);
    @expname[drawPolygon] function drawPolygon (
        canvasId: ArchInt, pointCount: Int, points: ref[array[Int]], filled: Bool
    );
    @expname[drawCircle] function drawCircle (canvasId: ArchInt, x1: Int, y1: Int, x2: Int, y2: Int);
    @expname[drawText] function drawText (canvasId: ArchInt, text: ptr[Char], font: ptr[Char], x: Int, y: Int);
    @expname[setFillStyle] function setFillStyle (
        canvasId: ArchInt, c1:ptr[Char], c2:ptr[Char], x1: Int, y1: Int, x2: Int, y2: Int
    );
    @expname[setStrokeStyle] function setStrokeStyle (canvasId: ArchInt, ss: ptr[Char]);
    @expname[setLineWidth] function setLineWidth (canvasId: ArchInt, lw: Int);
    @expname[drawImage] function drawImage (canvasId: ArchInt, imgId: Int, x: Int, y: Int, w: Int, h: Int, alpha: Float);
    @expname[clearCanvas] function clearCanvas (canvasId: ArchInt);
    // Audio Operations
    @expname[playAudio] function playAudio (audioId: ArchInt, loop: Bool);
    @expname[stopAudio] function stopAudio (audioId: ArchInt);
    // Misc
    @expname[logToConsole] function logToConsole (msg: ptr[Char]);
}

