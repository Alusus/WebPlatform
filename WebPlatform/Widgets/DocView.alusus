@merge module WebPlatform {
    //==========================================================================
    // DocView
    class DocView {
        @injection def widget: Widget;

        //-----------
        // Properties
        generateProperty[html, Text, String];

        //----------
        // Handlers

        handler this~init() {
        }

        handler this~init(t: String) {
            this.html = t;
        }

        handler this.setHtml(html: String) {
            this.html = html;
        }

        handler this.setMarkdown(md: String) {
            this.setMarkdown(md, false);
        }

        handler this.setMarkdown(md: String, linksInNewTab: Bool) {
            def mdTranslator: MarkdownTranslator[RegExp];
            mdTranslator.linksInNewTab = linksInNewTab;
            this.setHtml(mdTranslator.translate(md));
        }

        handler this.onPropUpdated() this.update();

        //-------------------
        // Function Overrides

        handler (this:Widget).build (ownerId: String, nextSiblingId: String) set_ptr {
            this.id = getNewId();
            createElement("div", this.id, ownerId, nextSiblingId);
            this.buildCommon();
            this.update();
        }

        handler (this:Widget).unbuild() set_ptr {
            if this.id.getLength() > 0 {
                deleteElement(this.id);
                this.unbuildCommon();
                this.id = String();
            }
        }

        handler (this:Widget).update() set_ptr {
            if this.id.getLength() > 0 {
                this.updateCommon();
                setElementAttribute(this.id, "innerHTML", this.html);
            }
        }

        //-----------------
        // Shared Functions

        handler this_type(): SrdRef[DocView] {
            return SrdRef[DocView].construct();
        }
    }
}
