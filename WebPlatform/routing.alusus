@merge module WebPlatform {
    //==========================================================================
    // RoutePayload
    class RoutePayload {
        def fullPath: String;
        def route: String;
        def params: Array[String];

        handler this~init() {}
        handler this~init(ref[this_type]) this = value;
        handler this = ref[this_type] {
            this.fullPath = value.fullPath;
            this.route = value.route;
            this.params = value.params;
        }
    }

    //==========================================================================
    // Router
    // Enables performing different actions based on the visited route.
    class Router {
        // Member Variables

        def locationChangedHandler: closure (ref[Window], ref[Int]) = closure (ref[Window], ref[Int]) {
            this.triggerRoute();
        };
        def routes: Map[String, closure(RoutePayload)];
        def onUnknownRoute: closure(RoutePayload);

        // Initialization

        handler this~init() {
            Window.instance.onLocationChanged.connect(this.locationChangedHandler);
        }

        handler this~terminate() {
            Window.instance.onLocationChanged.disconnect(this.locationChangedHandler);
        }

        // Member Functions

        handler this.route(r: String): ref[closure(String)] return this.routes(r);

        handler this.triggerRoute() {
            def payload: RoutePayload;
            payload.fullPath = Window.instance.location;
            def i: Int;
            for i = 0, i < this.routes.getLength(), ++i {
                def result: Array[String] = regexMatch(payload.fullPath, this.routes.keyAt(i));
                if result.getLength() > 0 {
                    payload.route = result(0);
                    result.remove(0);
                    payload.params = result;
                    this.routes.valAt(i)(payload);
                    return;
                }
            }
            if not this.onUnknownRoute.isNull() this.onUnknownRoute(payload);
        }
    }
}

