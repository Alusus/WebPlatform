import "Srl/Math";
import "Apm";
Apm.importFile("Alusus/WebPlatform");
use Srl;
use WebPlatform;

//==============================================================================
// Backend

@assetsRoute def assetsRoute: "Assets/";

//==============================================================================
// Frontend

def PrimeryColor: Color("8e50ef");

func createHeader (): SrdRef[Widget] {
    setElementAttribute("body", "style", "padding: 0; margin: 0;");

    return Box.new({}).{
        width = String("100%");
        height = String("40pt");
        padding = Quad(5, 0);
        backgroundColor = PrimeryColor;
        borderColor = PrimeryColor;
        border = Quad(1.5);

        addChildren({
            Label.new(String("أمثلة منصة ويب الأسس - مرسم")).{
                fontColor = Color("fff");
                fontSize = 21.0;
                width = String("100%");
                height = String("100%");
                backgroundColor = PrimeryColor;
            },
        });
    }~cast[SrdRef[Widget]];
}

@uiEndpoint["/", "WebPlatform Example - Canvas"]
func main {
    // Load assets from the server.
    def img: ImageResource;
    def music: AudioResource;
    def sound: AudioResource;
    await(Promises.Promise[Int].all({
        img.load("Assets/logo.svg"),
        loadFont("AlususMono", "Assets/AlususMono.otf"),
        music.load("Assets/music.mp3"),
        sound.load("Assets/sound.mp3")
    }).ignoreResult());

    // Build the view
    def canvas: SrdRef[Canvas];
    setView(Box.new({}).{
        align = String("center");
        addChildren({
            createHeader(),
            Box.new({}).{
                layout = String("row");
                addChildren({
                    Button.new(String("شغل الموسيقى")).{
                        height = String("30pt");
                        width = String("120pt");
                        backgroundColor = Color(200, 200, 200);
                        fontSize = 16.0;
                        onClick.connect(closure (music: by_ref)&(widget: ref[Button], payload: ref[Int]) {
                            music.play(true);
                        });
                    },
                    Button.new(String("أوقف الموسيقى")).{
                        height = String("30pt");
                        width = String("120pt");
                        backgroundColor = Color(200, 200, 200);
                        fontSize = 16.0;
                        onClick.connect(closure (music: by_ref)&(widget: ref[Button], payload: ref[Int]) {
                            music.stop();
                        });
                    },
                    Button.new(String("شغل الصوت")).{
                        height = String("30pt");
                        width = String("120pt");
                        backgroundColor = Color(200, 200, 200);
                        fontSize = 16.0;
                        onClick.connect(closure (sound: by_ref)&(widget: ref[Button], payload: ref[Int]) {
                            sound.play(false);
                        });
                    },
                    Button.new(String("شغل الصوت بتكرار")).{
                        height = String("30pt");
                        width = String("150pt");
                        backgroundColor = Color(200, 200, 200);
                        fontSize = 16.0;
                        onClick.connect(closure (sound: by_ref)&(widget: ref[Button], payload: ref[Int]) {
                            sound.play(true);
                        });
                    },
                    Button.new(String("أوقف الصوت")).{
                        height = String("30pt");
                        width = String("120pt");
                        backgroundColor = Color(200, 200, 200);
                        fontSize = 16.0;
                        onClick.connect(closure (sound: by_ref)&(widget: ref[Button], payload: ref[Int]) {
                            sound.stop();
                        });
                    }
                });
            }
            Canvas.new().{
                canvas = this;
                width = String("1280px");
                height = String("800px");
                bitmapWidth = String("1280px");
                bitmapHeight = String("800px");
                border = Quad(1, 1, 1, 1);
                borderColor = Color(0, 0, 0);
                backgroundColor = Color(220, 220, 220);
            }
        });
    });

    // Generate an image dynamically.
    def dynImg: ImageResource;
    def canvasRes: CanvasResource(100, 100);
    canvasRes.setLineWidth(5);
    canvasRes.setStrokeStyle("#ff5555");
    canvasRes.drawLine(0, 0, 100, 100);
    canvasRes.drawLine(100, 0, 0, 100);
    def points: Array [Int]({ 25, 25, 75, 25, 75, 75, 25, 75 });
    canvasRes.drawPolygon(4, points.buf, false);
    dynImg.initFromCanvas(canvasRes);

    // Animation loop.
    def x: Int = -80;
    startTimer(8000, closure (x: by_ref, img: by_ref, dynImg: by_ref)&(json: Json) {
        canvas.clear();
        canvas.drawLine(0,0, 100,100);
        canvas.drawCircle(100,180, 90,0 );
        def points: Array [Int]({ 50, 50, 100, 50, 100, 100, 50, 100, 25, 75 });
        canvas.setFillStyle("black", "blue", 0, 0, 100, 100);
        canvas.drawPolygon(5, points.buf, true);
        def TEXT: "الأسس";
        canvas.drawText(TEXT, "30px AlususMono", 550, 150);

        def size: Int = Math.sin(3.14 * x / 320.0) * 40 + 100;
        def y1: Int = Math.sin(3.14 * x / 320.0) * 100 + 400 - size / 2;
        def y2: Int = Math.cos(3.14 * x / 320.0) * 100 + 400 - size / 2;
        def alpha: Float = Math.sin(3.14 * x / 80.0) / 4 + 0.75;
        canvas.drawImage(img, x, y1, size, size, alpha);
        canvas.drawImage(dynImg, x, y2, size, size, alpha);
        if ++x >= 1280 x = -80;
    });

    runEventLoop();
}


Console.print("Starting server on port 8010...\nURL: http://localhost:8010/\n");
runServer({ "listening_ports", "8010", "static_file_max_age", "0" });

