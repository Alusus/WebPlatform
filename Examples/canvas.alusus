import "Srl/Math";
import "Apm";
Apm.importFile("Alusus/WebPlatform");
use Srl;
use WebPlatform;

//==============================================================================
// Frontend

def PrimeryColor: Color("8e50ef");
def LightColor: Color("c380ff");

@assetsRoute def assetsRoute: "Assets/";

func createHeader (): SrdRef[Widget] {
    setElementAttribute("body", "style", "padding: 0; margin: 0;");

    return Box.new({}).{
        width = String("100%");
        height = String("40pt");
        padding = Quad(5, 0);
        backgroundColor = PrimeryColor;
        borderColor = PrimeryColor;
        border = Quad(1.5);

        addChildren({
            Label.new(String("أمثلة منصة ويب الأسس - لوحة رسم")).{
                fontColor = Color("fff");
                fontSize = 21.0;
                width = String("100%");
                height = String("100%");
                backgroundColor = PrimeryColor;
            },
        });
    }~cast[SrdRef[Widget]];
}

@uiEndpoint["/", "WebPlatform Example - Canvas"]
func main {
    def canvas: SrdRef[Canvas];
    setView(Box.new({}).{
        align = String("center");
        addChildren({
            createHeader(),
            Canvas.new().{
                canvas = this;
                width = String("1280px");
                height = String("800px");
                bitmapWidth = String("1280px");
                bitmapHeight = String("800px");
                border = Quad(1, 1, 1, 1);
                borderColor = Color(0, 0, 0);
                backgroundColor = Color(220, 220, 220);
            }
        });
    });

    def img: ImageResource;

    await(Promises.Promise[Int].all({
        img.load("Assets/logo.svg"),
        loadFont("AlususMono", "Assets/AlususMono.otf")
    }).ignoreResult());

    def x: Int = -80;
    startTimer(8000, closure (x: by_ref, img: by_ref)&(json: Json) {
        clearCanvas(canvas.id);
        drawLine(canvas.id, 0,0, 100,100);
        drawCircle(canvas.id, 100,180, 90,0 );
        def points: Array [Int]({ 50, 50, 100, 50, 100, 100, 50, 100, 25, 75 });
        setFillStyle(canvas.id , "black", "blue", 0, 0, 100, 100);
        drawPolygon(canvas.id, 5, points.buf);
        def TEXT: "الأسس";
        drawText(canvas.id, TEXT, "30px AlususMono", 550, 150);

        def size: Int = Math.sin(3.14 * x / 320.0) * 40 + 100;
        def y: Int = Math.sin(3.14 * x / 320.0) * 100 + 400 - size / 2;
        def alpha: Float = Math.sin(3.14 * x / 80.0) / 4 + 0.75;
        drawImage(canvas.id, img.id, x, y, size, size, alpha);
        if ++x >= 1280 x = -80;
    });

    runEventLoop();
}


Console.print("Starting server on port 8010...\nURL: http://localhost:8010/\n");
runServer({ "listening_ports", "8010", "static_file_max_age", "0" });

