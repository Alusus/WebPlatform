import "Apm";
Apm.importFile("Alusus/WebPlatform");
use Srl;
use WebPlatform;

//==============================================================================
// Backend

def MAX_MESSAGES: 12;
def messages: Array[String];

@beEndpoint["POST", "/messages"]
func postMessages (conn: ptr[Http.Connection]) {
    def postData: array[Char, 1024];
    def postDataSize: Int = Http.read(conn, postData~ptr, postData~size);
    if messages.getLength() >= MAX_MESSAGES messages.remove(0);
    messages.add(String(postData~ptr, postDataSize));
    Http.print(conn, "HTTP/1.1 200 Ok\r\n\r\n");
}

@beEndpoint["GET", "/messages"]
func getMessages (conn: ptr[Http.Connection]) {
    def response: String = String.merge(messages, "<br>");
    Http.print(conn, "HTTP/1.1 200 Ok\r\n");
    Http.print(conn, "Content-Type: text/plain\r\n");
    Http.print(conn, "Cache-Control: no-cache\r\n");
    Http.print(conn, "Content-Length: %d\r\n\r\n", response.getLength());
    Http.print(conn, response.buf);
}

//==============================================================================
// Frontend

macro prepCastedArg [varName, varType, argName] {
    def varName: ref[varType];
    varName~ptr = argName~cast[ptr[varType]];
}

def PrimeryColor: Color("8e50ef");
def LightColor: Color("c380ff");

func createHeader (): SrdRef[Widget] {
    setElementAttribute("body", "style", "padding: 0; margin: 0;");

    return Box.new({}).{
        width = String("100%");
        height = String("80pt");
        padding = Quad(5, 0);
        backgroundColor = PrimeryColor;
        borderColor = PrimeryColor;
        border = Quad(1.5);

        addChildren({
            Label.new(String("أمثلة منصة ويب الأسس - الدردشة")).{
                fontColor = Color("fff");
                fontSize = 21.0;
                width = String("100%");
                height = String("100%");
                backgroundColor = PrimeryColor;
            },
            Box.new({}).{
                layout = String("row");
                justify = String("space-between");
                backgroundColor = PrimeryColor;

                addChildren({
                    Hyperlink.new(String("/"), Label.new(String("الرئيسية")).{
                        fontSize = 16.0;
                        fontColor = Color("fff");
                        padding = Quad(3);
                        backgroundColor = LightColor;
                    }),
                    Hyperlink.new(String("/about"), Label.new(String("عن البرنامج")).{
                        fontSize = 16.0;
                        fontColor = Color("fff");
                        padding = Quad(3);
                        backgroundColor = LightColor;
                    })
                });
            }
        });
    }~cast[SrdRef[Widget]];
}

func encodeHtml(str: String): String {
    return str
        .replace("\n", "<br>")
        .replace(",", "&comma;")
        .replace("\"", "&quot;");
}

@uiEndpoint["/", "WebPlatform Example - Chat"]
func main {
    def onFetch: closure (json: Json);

    setView(Box.new({}).{
        height = String("100%");
        // padding = Quad(0, 50);
        addChildren({
            createHeader(),
            Box.new({}).{
                width = String("100%");
                height = String("100%");
                border = Quad(1);
                borderColor = Color(0, 0, 0);
                // padding = Quad(5);
                addChildren({
                    Label.new(String()).{
                        width = String("100%");
                        height = String("100%");
                        fontColor = Color(50, 50, 50);
                        fontSize = 20.0;

                        onFetch = closure (json: Json) {
                            def data: String = json.getObject("eventData").getString("body");
                            if this.getText() != data {
                                this.setText(data);
                            }
                        };
                    }
                });
            },
            Box.new({}).{
                width = String("100%");
                height = String("50pt");
                layout = String("row");
                border = Quad(1.5);
                borderColor = PrimeryColor;
                backgroundColor = PrimeryColor;
                // padding = Quad(5);
                def textInput: SrdRef[TextInput];
                addChildren({
                    TextInput.new().{
                        textInput = this;
                        width = String("100%");
                        height = String("100%");
                        fontSize = 12.0;
                        onKeyUp.connect(closure (widget: ref[TextInput], payload: ref[String]) {
                            if payload == "Shift+Enter" {
                                def newData: String = encodeHtml(widget.getText());
                                widget.setText(String());
                                sendRequest(
                                    "POST", "/messages", "Content-Type: application/text", newData, closure (Json) {}
                                );
                                sendRequest("GET", "/messages", null, null, onFetch);
                            }
                        });
                    },
                    Button.new(String("أرسل")).{
                        height = String("100%");
                        width = String("50pt");
                        backgroundColor = Color(200, 200, 200);
                        fontSize = 16.0;
                        onClick.connect(closure (widget: ref[Button], payload: ref[Int]) {
                            def newData: String = encodeHtml(textInput.getText());
                            textInput.setText(String());
                            sendRequest(
                                "POST", "/messages", "Content-Type: application/text", newData, closure (Json) {}
                            );
                            sendRequest("GET", "/messages", null, null, onFetch);
                        });
                    }
                });
            }
        })
    });

    startTimer(500000, closure (json: Json) {
        sendRequest("GET", "/messages", null, null, onFetch);
    });
    sendRequest("GET", "/messages", null, null, onFetch);

    runEventLoop();
}

@uiEndpoint["/about", "WebPlatform Example - Chat"]
func about {
    def label1: SrdRef[Label] = Label.new(String("مثال الدردشة"));
    label1.setFontColor(Color(0, 0, 0));
    label1.setFontSize(30.0);

    def label2: SrdRef[Label] = Label.new(String("طُور باستخدام منصة ويب الأسس"));
    label2.setFontColor(Color(0, 0, 0));
    label2.setFontSize(20.0);
    def canvas: SrdRef[Canvas] = Canvas.new();
    def box: SrdRef[Box] = Box.new({ createHeader(), canvas ,label1, label2 });
    // box.setPadding(Quad(0, 50));
    setView(box);
    drawLine(canvas.id, 0,0, 100,100);
    drawCircle(canvas.id, 100,180, 90,0 );
    def points: Array [Int]({ 50, 50, 100, 50, 100, 100, 50, 100, 25, 75 });
    setFillStyle(canvas.id , "black", "blue", 0, 0, 100, 100);
    drawPolygon(canvas.id, 5, points.buf);
    drawText(canvas.id, "HI", "30px Arial", 50, 50);

    runEventLoop();
}


Console.print("Starting server on port 8010...\nURL: http://localhost:8010/\n");
runServer({ "listening_ports", "8010", "static_file_max_age", "0" });

